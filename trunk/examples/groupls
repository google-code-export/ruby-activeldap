#!/usr/bin/ruby -W0

base = File.expand_path(File.join(File.dirname(__FILE__), ".."))
$LOAD_PATH << File.join(base, "lib")
$LOAD_PATH << File.join(base, "examples")

require 'active_ldap'
require 'objects/user'
require 'objects/group'

argv, opts, options = ActiveLdap::Command.parse_options do |opts, options|
  opts.banner += " GROUP_NAME"
end

if argv.size == 1
  name = argv.shift
else
  $stderr.puts opts
  exit 1
end

pwb = Proc.new do |user|
  ActiveLdap::Command.read_password("[#{user}] Password: ")
end

ActiveLdap::Base.establish_connection(:password_block => pwb,
                                      :allow_anonymous => false)

unless Group.exists?(name)
  $stderr.puts("Group #{name} doesn't exist.")
  exit 1
end

group = Group.find(name)

members = []
group.primary_members.each do |mem|
  members << "#{mem.uid}[#{mem.uidNumber}]"
end

group.members.each do |mem|
  if mem.exists?
    members << "#{mem.uid}[#{mem.uidNumber}]"
  else
    members << "#{mem.uid}[????]"
  end
end

puts("#{group.id}(#{group.gid_number}): #{members.join(', ')}")
