# ActiveLdap チュートリアルの和訳です。現在作成中。誤訳などあったら教えてください。

= はじめに =

Ruby/ActiveLdap は LDAP を操作する今までにない方法です。大半のLDAP操作は難しいLDIFを扱うか、ウェブインターフェースを利用するか、説明を省かれたリファレンスマニュアルを参照しながら、難解なAPI利用しなければなりませんでした。
Ruby/ActiveLdap はこの解決を目指します。Rub/ActiveRecord によって着想し、Ruby/ActiveLdap は LDAP エントリーに対するオブジェクト指向のインターフェースを提供します。

== LDAP とは何か ==

LDAPは”軽量ディレクトリアクセスプロトコル”のことです。これは基本的にLDAPサーバと対話するためのプロトコルを意味します。LDAPサーバは軽量のディレクトリサーバです。LDAPサーバはシンプルな電話帳から、コンピュータ上のユーザアカウントまで、なんでも格納することができ、たいていの場合後者のために使われます。このテキストでの例は、LDAPを Unix 系システムのための中央認証・認可サーバとして利用することを熟知しているものと仮定します（残念なことに、その名前に含まれているにも関わらず私はまだ Micrsoft ActiveDirectory に対してこれを試みていません）

より理解するために：
  * RFC1777 - 軽量ディレクトリアクセスプロトコル
  * OpenLdAP

== では何故 Ruby/ActiveLdap なのか？ ==

LDAPを直接扱うさいには（たとえ素晴らしい Ruby/LDAP ライブラリを用いても）、既存の LDAP API に拘束されることになります。このAPIは巨大な配列を生成し、コードを読みづらく、また楽しくないものにしてしまいます。

もしあなたがあなたのコードにLDAPを統合するためのきれいな方法を欲するなら、Ruby/ActiveLdap を使う理由になり得ます。

前述のとおり、Ruby/ActiveLdap は LDAP エントリに対してオブジェクト指向のインターフェースを提供します。

Ruby/ActiveRecord を知っていて、また LDAP の扱いを知っている人なら、以下のコードですぐにどのように使うのかをイメージできるでしょう。

{{{
user = User.new
user.uid        = 'hogehoge'
user.uid_number = 1234
user.save
}}}

(以下記述中…）