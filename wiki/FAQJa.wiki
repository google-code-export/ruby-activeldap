<wiki:toc min_depth="2" max_depth="3" />

= Introduction =

!ActiveLdap に関する FAQ です。ここに記載の無い質問はメーリングリストで質問してください。

= !ActiveLdap について =
== どういう場合に !ActiveLdap を利用すべきですか？ ==
LDAP エントリからの情報取得や更新などをせず、認証のみを行いたい場合は、Ruby/LDAP や Net::LDAP で十分な場合がもあるでしょう。その他の場合は、!ActiveLdap が有効な場合が多いと思います。

!ActiveLdap が特に有効なのは、Rails と連携したい場合・LDAP エントリにビジネスロジックを持たせたい場合です。!ActiveRecord 由来のコールバックやバリデーションが備わっており、エラーハンドリングも容易なものとなるでしょう。

== !ActiveDirectory に利用できますか？ ==
はい。利用できます。以下の資料も参考になるかと思います。

 * [http://www.clear-code.com/archives/rails-seminar-technical-night/ Railsで作るActive Directoryと連携した社内システム]

== Ruby 1.9 に対応していますか？ ==
1.0.9 以上で対応しています。

== Rails 3 に対応していますか？ ==
現時点（2010-09-14 最新版 1.2.2）では未対応です。現在対応作業を進めています。

== 100万件単位のエントリを扱えますか？ ==
数件～百件程度の LDAP エントリを検索によって取得して、!ActiveLdap のオブジェクトにするという事であれば、十分に動くと思います。検索対象が100万件であっても、実際に検索を行うのは LDAP サーバ側ですから、その検索速度などは LDAP サーバの能力によるでしょう。

もし万を超える単位の LDAP エントリを !ActiveLdap のオブジェクトとして扱いたいと言う事であれば、おそらくはアプリケーションの設計を見直した方がよいでしょう。

= バグ報告・開発やサポートについて =

== バグの報告と修正について ==
バグと思われるものを発見したら、先ずは最新バージョンを利用してみてください。また、[http://code.google.com/p/ruby-activeldap/issues/list Issues] を確認してください。既に報告されているバグかもしれません。

最新版を利用しても解決せず、また [http://code.google.com/p/ruby-activeldap/issues/list Issues] にも登録が無い場合は新しいバグとして [http://code.google.com/p/ruby-activeldap/issues/list Issues] に登録してください。

この際、問題の共有と原因の特定のために、可能な限り以下の情報を一緒に投稿してください。
  * OS の種類とそのバージョン
  * 利用している LDAP サーバの製品名とそのバージョン
  * Ruby のバージョン
  * 利用している ActiveLdap のバージョン
  * 再現のためのコードとデータ

また、修正方法が明確な場合、パッチを一緒に投稿してくれるとより早く反映できるでしょうし、テストコードを含めてもらえれば更に早く対応できるでしょう。

== 開発に参加するには？ ==
先ずはバグの報告やパッチの投稿、[http://code.google.com/p/ruby-activeldap/issues/list Issues] を解決するためのコードやテストの投稿をしてください。必要と判断できればコミット権をお渡しします。

== サポートについて ==
メーリングリストで質問してみてください。有志の方が回答してくれるかもしれません。

  * [http://rubyforge.org/mailman/listinfo/ruby-activeldap-discuss-ja 日本語メーリングリスト]
  * [http://rubyforge.org/mailman/listinfo/ruby-activeldap-discuss 英語メーリングリスト]

※英語のＭＬのほうが活発です

= LDAP について =

== 情報源はありますか？ ==
インターネット上に公開されている情報源で言うと、全体感をもって解説しているのは RFC でしょう。RFC4510 が LDAP 技術使用文書のロードマップです(2010-09-23 現在)。大枠の情報はここから辿る事で参照できるでしょう。

細かい仕様については、ロードマップに載っていない RFC を参照している場合もあります。仕様を網羅的に調べたい場合は、IETF の RFC データーベースにアクセスしてください。キーワード "LDAP" で検索し、obsolete になっていないものが有効な RFC です。

入り口としては、Rubyist Magazine の記事 [http://jp.rubyist.net/magazine/?0027-ActiveLdap#l4 "ActiveLdap を使ってみよう（前編）- LDAP とは"] をお勧めします。

== スキーマをどうやって作りますか？ ==
OpenLDAP であれば、 /etc/openldap/schemas ディレクトリ以下などにスキーマ定義を記述したファイルが配置されています。

OpenLDAP におけるスキーマの作り方は OpenLDAP の [http://www.openldap.org/doc/admin24/ Administrator's Guide] の 13.Schema Specification をご参照ください（参照先は OpenLDAP 2.4 のドキュメントです）。必要に応じ、RFC も役立つことでしょう。